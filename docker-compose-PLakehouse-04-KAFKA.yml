version: '3.9'
services:

#################### Kafka Stack #############################################################################
## Net range Zookeeper, Schema Registry: 172.55.1.10X
## Net range Brokers: 172.55.1.11X
## Net range ksqldb(server & cli), Connect, REST-API and Conduktor: 172.55.1.12X
##############################################################################################################
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    healthcheck:
      test: nc -z localhost 2181 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 30
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      lakehouse-net:
        aliases: 
          - zookeeper
        ipv4_address: 172.55.1.100
    
  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      broker-1:
        condition: service_healthy
      broker-2:
        condition: service_healthy
      broker-3:
        condition: service_healthy
    ports:
      - "8081:8081"
    healthcheck:
      test: nc -z localhost 8081 || exit -1
      start_period: 30s
      interval: 20s
      timeout: 60s
      retries: 300
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://broker-2:9092,PLAINTEXT_INTERNAL://localhost:29092
    networks:
      lakehouse-net:
        aliases: 
          - schema-registry
        ipv4_address: 172.55.1.102

  broker-1:
    image: confluentinc/cp-kafka:latest
    hostname: broker-1
    container_name: broker-1
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "19092:19092"
      - "19101:19101"
    healthcheck:
      test: nc -z localhost 19092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 30
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-1:9092,PLAINTEXT_HOST://localhost:19092
      # KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      # KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      # KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      # KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      # KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      # KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      # KAFKA_JMX_PORT: 9101
      # KAFKA_JMX_HOSTNAME: localhost
      # KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      # CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      # CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      # CONFLUENT_METRICS_ENABLE: 'false'
      # CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
      # KAFKA_LOG_RETENTION_MS: 100000
      # KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 5000
    networks:
      lakehouse-net:
        aliases: 
          - broker-1
        ipv4_address: 172.55.1.111

  broker-2:
    image: confluentinc/cp-kafka:latest
    hostname: broker-2
    container_name: broker-2
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "29092:29092"
      - "29101:29101"
    healthcheck:
      test: nc -z localhost 29092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 30
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-2:9092,PLAINTEXT_HOST://localhost:29092
      # KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      # KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      # KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      # KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      # KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      # KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      # KAFKA_JMX_PORT: 9101
      # KAFKA_JMX_HOSTNAME: localhost
      # KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      # CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      # CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      # CONFLUENT_METRICS_ENABLE: 'false'
      # CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
      # KAFKA_LOG_RETENTION_MS: 100000
      # KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 5000
    networks:
      lakehouse-net:
        aliases: 
          - broker-2
        ipv4_address: 172.55.1.112  


  broker-3:
    image: confluentinc/cp-kafka:latest
    hostname: broker-3
    container_name: broker-3
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "39092:39092"
      - "39101:39101"
    healthcheck:
      test: nc -z localhost 39092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 30
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker-3:9092,PLAINTEXT_HOST://localhost:39092
      # KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      # KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      # KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      # KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      # KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      # KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      # KAFKA_JMX_PORT: 9101
      # KAFKA_JMX_HOSTNAME: localhost
      # KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      # CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      # CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      # CONFLUENT_METRICS_ENABLE: 'false'
      # CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
      # KAFKA_LOG_RETENTION_MS: 100000
      # KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 5000
    networks:
      lakehouse-net:
        aliases: 
          - broker-3
        ipv4_address: 172.55.1.113  

  ksqldb-server:
    image: confluentinc/cp-ksqldb-server
    hostname: ksqldb-server
    container_name: ksqldb-server
    ports:
      - "8088:8088"
    healthcheck:
      test: nc -z localhost 8088 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 30
    environment:
      KSQL_BOOTSTRAP_SERVERS: 'PLAINTEXT://broker-1:9092,PLAINTEXT://broker-2:9092,PLAINTEXT://broker-3:9092'
      KSQL_LISTENERS: http://0.0.0.0:8088/
      KSQL_KSQL_SERVICE_ID: ksqldb-server_
      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
    depends_on:
      - zookeeper
      - schema-registry
      - broker-1
      - broker-2
      - broker-3
    networks:
      lakehouse-net:
        aliases: 
          - ksqldb-server
        ipv4_address: 172.55.1.121

  ksqldb-cli:
    image: confluentinc/ksqldb-cli
    container_name: ksqldb-cli
    depends_on:
      - ksqldb-server
    entrypoint: /bin/sh
    tty: true
    networks:
      lakehouse-net:
        aliases: 
          - ksqldb-cli
        ipv4_address: 172.55.1.122

  connect:
    image: confluentinc/cp-kafka-connect
    hostname: connect
    container_name: connect
    ports:
      - "8083:8083"
    healthcheck:
      test: nc -z localhost 8083 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 30
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'broker-1:9092,broker-2:9092,broker-3:9092'
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "connect"
      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
      CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_PLUGIN_PATH: '/usr/share/java,/etc/kafka-connect/jars,/usr/share/confluent-hub-components'
#    volumes:
# Organizar los conectores....
#      - ./connectors:/etc/kafka-connect/jars/
    depends_on:
      - zookeeper
      - schema-registry
      - broker-1
      - broker-2
      - broker-3
    command:
      - bash
      - -c
      - |
        confluent-hub install --no-prompt confluentinc/kafka-connect-s3:latest
        /etc/confluent/docker/run
#        confluent-hub install --no-prompt debezium/debezium-connector-mysql:latest
#        confluent-hub install --no-prompt confluentinc/kafka-connect-datagen:0.4.0
    networks:
      lakehouse-net:
        aliases: 
          - connect
        ipv4_address: 172.55.1.123

  conduktor-platform:
    image: conduktor/conduktor-platform:latest
    hostname: conduktor-platform
    container_name: conduktor-platform
    ports:
      - "8080:8080"
    healthcheck:
      test: nc -z localhost 8080 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 30
    volumes:
      - conduktor_data:/var/conduktor
    environment:
      CDK_ORGANIZATION_NAME: "Plakehouse"
      CDK_ADMIN_EMAIL: "admin@admin.io"
      CDK_ADMIN_PASSWORD: "admin"
      CDK_DATABASE_URL: "postgresql://conduktor:some_password@postgresql:5432/conduktorplatform"
      CDK_CLUSTERS_0_ID: "default"
      CDK_CLUSTERS_0_NAME: "Plakehouse01 Kafka Cluster"
      CDK_CLUSTERS_0_COLOR: "#0013E7"
      CDK_CLUSTERS_0_BOOTSTRAPSERVERS: "PLAINTEXT://broker-1:9092,PLAINTEXT://broker-2:9092,PLAINTEXT://broker-3:9092"
      CDK_CLUSTERS_0_SCHEMAREGISTRY_URL: "http://schema-registry:8081"
      CDK_CLUSTERS_0_KAFKACONNECTS_0_URL: "http://connect:8083"
      CDK_CLUSTERS_0_KAFKACONNECTS_0_NAME: "full stack kafka connect"
    networks:
      lakehouse-net:
        aliases: 
          - conduktor-platform
        ipv4_address: 172.55.1.124

  rest-proxy:
    image: confluentinc/cp-kafka-rest
    hostname: rest-proxy
    container_name: rest-proxy
    ports:
      - "8082:8082"
    healthcheck:
      test: nc -z localhost 8082 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 30
    environment:
      # KAFKA_REST_ZOOKEEPER_CONNECT: zoo1:2181
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082/
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://schema-registry:8081/
      KAFKA_REST_HOST_NAME: kafka-rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: 'broker-1:9092,broker-2:9092,broker-3:9092'
    depends_on:
      - zookeeper
      - schema-registry
      - broker-1
      - broker-2
      - broker-3
    networks:
      lakehouse-net:
        aliases: 
          - rest-proxy
        ipv4_address: 172.55.1.125
##############################################################################################################

volumes:
  conduktor_data:
  
networks:
  lakehouse-net:
    external: true
    name: lakehouse-net