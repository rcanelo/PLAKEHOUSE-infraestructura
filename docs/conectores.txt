

*********** ESTE HA FUNCIONADO ********************************+
{
  "topics": "rca-data",
  "store.url": "http://192.168.1.25:9000",
  "key.converter": "org.apache.kafka.connect.storage.StringConverter",
  "schema.compatibility": "NONE",
  "partitioner.class": "io.confluent.connect.storage.partitioner.DefaultPartitioner",
  "storage.class": "io.confluent.connect.s3.storage.S3Storage",
  "connector.class": "io.confluent.connect.s3.S3SinkConnector",
  "s3.bucket.name": "kafka",
  "schema.generator.class": "io.confluent.connect.storage.hive.schema.DefaultSchemaGenerator",
  "aws.secret.access.key": "minio123",
  "s3.part.size": "5242880",
  "aws.access.key.id": "minio",
  "name": "S3-SINK-rca-data",
  "format.class": "io.confluent.connect.s3.format.avro.AvroFormat",
  "tasks.max": "1",
  "flush.size": "3"
}
****************************************************************************

*********** ESTE HA FUNCIONADO NYCT ********************************
{
  "topics": "nyct-topic",
  "store.url": "http://192.168.1.25:9000",
  "key.converter": "org.apache.kafka.connect.storage.StringConverter",
  "schema.compatibility": "NONE",
  "partitioner.class": "io.confluent.connect.storage.partitioner.DefaultPartitioner",
  "storage.class": "io.confluent.connect.s3.storage.S3Storage",
  "connector.class": "io.confluent.connect.s3.S3SinkConnector",
  "s3.bucket.name": "kafka",
  "schema.generator.class": "io.confluent.connect.storage.hive.schema.DefaultSchemaGenerator",
  "aws.secret.access.key": "minio123",
  "s3.part.size": "5242880",
  "aws.access.key.id": "minio",
  "name": "S3-SINK-nyct-topic",
  "format.class": "io.confluent.connect.s3.format.avro.AvroFormat",
  "tasks.max": "1",
  "flush.size": "3"
}
****************************************************************************


************** SIN PROBAR ***************************************************
##################3 JDBC POSTGRES ##########################################3
"name": "sink-testtopic-crdb",
 "config": {
"connector.class":"io.confluent.connect.jdbc.JdbcSinkConnector",
"connection.url": "jdbc:postgresql://roach-single:26257/sampledb?useSSL=false&reWriteBatchedInserts=true",
"topics": "testtopic",
"tasks.max": "1",
"key.converter": "org.apache.kafka.connect.storage.StringConverter",
"value.converter": "io.confluent.connect.avro.AvroConverter",
"value.converter.schema.registry.url": "http://localhost:8081",
"key.converter.schemas.enable": false,
"value.converter.schemas.enable": true,
"config.action.reload": "restart",
"errors.log.enable": "true",
"errors.log.include.messages": "true",
"print.key": "true",
"errors.tolerance": "all",
"connection.user": "root",
"connection.password": "",
"table.name.format": "schema_sample.sample_test",
"auto.create": true,
"auto.evolve": true,
"insert.mode": "insert",
"pk.mode": "none",
"pk.fields": "none",
"batch.size": 1,
"consumer.override.max.poll.records": 1}
###########################################################################3#




************* PRUEBAS **************************************************
{
  "topics": "nyct-topic",
  "store.url": "http://192.168.1.25:9000",
  "schema.compatibility": "NONE",
  "partitioner.class": "io.confluent.connect.storage.partitioner.DefaultPartitioner",
  "storage.class": "io.confluent.connect.s3.storage.S3Storage",
  "connector.class": "io.confluent.connect.s3.S3SinkConnector",
  "s3.bucket.name": "kafka",
  "schema.generator.class": "io.confluent.connect.storage.hive.schema.DefaultSchemaGenerator",
  "aws.secret.access.key": "minio123",
  "s3.part.size": "5242880",
  "aws.access.key.id": "minio",
  "name": "s3-sink",
  "format.class": "io.confluent.connect.s3.format.json.JsonFormat",
  "tasks.max": "1",
  "flush.size": "3"
}

{
  "topics": "racg-data",
  "store.url": "http://192.168.1.25:9000",
  "schema.compatibility": "NONE",
  "partitioner.class": "io.confluent.connect.storage.partitioner.DefaultPartitioner",
  "storage.class": "io.confluent.connect.s3.storage.S3Storage",
  "connector.class": "io.confluent.connect.s3.S3SinkConnector",
  "s3.bucket.name": "kafka",
  "schema.generator.class": "io.confluent.connect.storage.hive.schema.DefaultSchemaGenerator",
  "aws.secret.access.key": "minio123",
  "s3.part.size": "5242880",
  "aws.access.key.id": "minio",
  "name": "s3-sink",
  "format.class": "io.confluent.connect.s3.format.json.JsonFormat",
  "tasks.max": "1",
  "flush.size": "3"
}

{
  "topics": "rca-data",
  "store.url": "http://192.168.1.25:9000",
  "schema.compatibility": "NONE",
  "partitioner.class": "io.confluent.connect.storage.partitioner.DefaultPartitioner",
  "storage.class": "io.confluent.connect.s3.storage.S3Storage",
  "connector.class": "io.confluent.connect.s3.S3SinkConnector",
  "s3.bucket.name": "kafka",
  "schema.generator.class": "io.confluent.connect.storage.hive.schema.DefaultSchemaGenerator",
  "aws.secret.access.key": "minio123",
  "s3.part.size": "5242880",
  "aws.access.key.id": "minio",
  "name": "s3-sink",
  "format.class": "io.confluent.connect.s3.format.avro.AvroFormat",

  "tasks.max": "1",
  "flush.size": "3"
}
